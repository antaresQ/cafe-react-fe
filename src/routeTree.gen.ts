/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as CafesIndexImport } from './routes/cafes/index'
import { Route as EmployeesCafeIdImport } from './routes/employees/$cafeId'
import { Route as EmployeeEmployeeidImport } from './routes/employee/$employeeid'
import { Route as CafeCafeidImport } from './routes/cafe/$cafeid'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CafesIndexRoute = CafesIndexImport.update({
  path: '/cafes/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesCafeIdRoute = EmployeesCafeIdImport.update({
  path: '/employees/$cafeId',
  getParentRoute: () => rootRoute,
} as any)

const EmployeeEmployeeidRoute = EmployeeEmployeeidImport.update({
  path: '/employee/$employeeid',
  getParentRoute: () => rootRoute,
} as any)

const CafeCafeidRoute = CafeCafeidImport.update({
  path: '/cafe/$cafeid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cafe/$cafeid': {
      id: '/cafe/$cafeid'
      path: '/cafe/$cafeid'
      fullPath: '/cafe/$cafeid'
      preLoaderRoute: typeof CafeCafeidImport
      parentRoute: typeof rootRoute
    }
    '/employee/$employeeid': {
      id: '/employee/$employeeid'
      path: '/employee/$employeeid'
      fullPath: '/employee/$employeeid'
      preLoaderRoute: typeof EmployeeEmployeeidImport
      parentRoute: typeof rootRoute
    }
    '/employees/$cafeId': {
      id: '/employees/$cafeId'
      path: '/employees/$cafeId'
      fullPath: '/employees/$cafeId'
      preLoaderRoute: typeof EmployeesCafeIdImport
      parentRoute: typeof rootRoute
    }
    '/cafes/': {
      id: '/cafes/'
      path: '/cafes'
      fullPath: '/cafes'
      preLoaderRoute: typeof CafesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafe/$cafeid': typeof CafeCafeidRoute
  '/employee/$employeeid': typeof EmployeeEmployeeidRoute
  '/employees/$cafeId': typeof EmployeesCafeIdRoute
  '/cafes': typeof CafesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafe/$cafeid': typeof CafeCafeidRoute
  '/employee/$employeeid': typeof EmployeeEmployeeidRoute
  '/employees/$cafeId': typeof EmployeesCafeIdRoute
  '/cafes': typeof CafesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafe/$cafeid': typeof CafeCafeidRoute
  '/employee/$employeeid': typeof EmployeeEmployeeidRoute
  '/employees/$cafeId': typeof EmployeesCafeIdRoute
  '/cafes/': typeof CafesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cafe/$cafeid'
    | '/employee/$employeeid'
    | '/employees/$cafeId'
    | '/cafes'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cafe/$cafeid'
    | '/employee/$employeeid'
    | '/employees/$cafeId'
    | '/cafes'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cafe/$cafeid'
    | '/employee/$employeeid'
    | '/employees/$cafeId'
    | '/cafes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CafeCafeidRoute: typeof CafeCafeidRoute
  EmployeeEmployeeidRoute: typeof EmployeeEmployeeidRoute
  EmployeesCafeIdRoute: typeof EmployeesCafeIdRoute
  CafesIndexRoute: typeof CafesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CafeCafeidRoute: CafeCafeidRoute,
  EmployeeEmployeeidRoute: EmployeeEmployeeidRoute,
  EmployeesCafeIdRoute: EmployeesCafeIdRoute,
  CafesIndexRoute: CafesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cafe/$cafeid",
        "/employee/$employeeid",
        "/employees/$cafeId",
        "/cafes/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cafe/$cafeid": {
      "filePath": "cafe/$cafeid.tsx"
    },
    "/employee/$employeeid": {
      "filePath": "employee/$employeeid.tsx"
    },
    "/employees/$cafeId": {
      "filePath": "employees/$cafeId.tsx"
    },
    "/cafes/": {
      "filePath": "cafes/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
