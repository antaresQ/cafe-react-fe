/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as EmployeesIndexImport } from './routes/employees/index'
import { Route as CafesIndexImport } from './routes/cafes/index'
import { Route as EmployeesAddImport } from './routes/employees/add'
import { Route as EmployeesUseridImport } from './routes/employees/$userid'
import { Route as CafesAddImport } from './routes/cafes/add'
import { Route as CafesCafeidImport } from './routes/cafes/$cafeid'

// Create/Update Routes

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesIndexRoute = EmployeesIndexImport.update({
  path: '/employees/',
  getParentRoute: () => rootRoute,
} as any)

const CafesIndexRoute = CafesIndexImport.update({
  path: '/cafes/',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesAddRoute = EmployeesAddImport.update({
  path: '/employees/add',
  getParentRoute: () => rootRoute,
} as any)

const EmployeesUseridRoute = EmployeesUseridImport.update({
  path: '/employees/$userid',
  getParentRoute: () => rootRoute,
} as any)

const CafesAddRoute = CafesAddImport.update({
  path: '/cafes/add',
  getParentRoute: () => rootRoute,
} as any)

const CafesCafeidRoute = CafesCafeidImport.update({
  path: '/cafes/$cafeid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/cafes/$cafeid': {
      id: '/cafes/$cafeid'
      path: '/cafes/$cafeid'
      fullPath: '/cafes/$cafeid'
      preLoaderRoute: typeof CafesCafeidImport
      parentRoute: typeof rootRoute
    }
    '/cafes/add': {
      id: '/cafes/add'
      path: '/cafes/add'
      fullPath: '/cafes/add'
      preLoaderRoute: typeof CafesAddImport
      parentRoute: typeof rootRoute
    }
    '/employees/$userid': {
      id: '/employees/$userid'
      path: '/employees/$userid'
      fullPath: '/employees/$userid'
      preLoaderRoute: typeof EmployeesUseridImport
      parentRoute: typeof rootRoute
    }
    '/employees/add': {
      id: '/employees/add'
      path: '/employees/add'
      fullPath: '/employees/add'
      preLoaderRoute: typeof EmployeesAddImport
      parentRoute: typeof rootRoute
    }
    '/cafes/': {
      id: '/cafes/'
      path: '/cafes'
      fullPath: '/cafes'
      preLoaderRoute: typeof CafesIndexImport
      parentRoute: typeof rootRoute
    }
    '/employees/': {
      id: '/employees/'
      path: '/employees'
      fullPath: '/employees'
      preLoaderRoute: typeof EmployeesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafes/$cafeid': typeof CafesCafeidRoute
  '/cafes/add': typeof CafesAddRoute
  '/employees/$userid': typeof EmployeesUseridRoute
  '/employees/add': typeof EmployeesAddRoute
  '/cafes': typeof CafesIndexRoute
  '/employees': typeof EmployeesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafes/$cafeid': typeof CafesCafeidRoute
  '/cafes/add': typeof CafesAddRoute
  '/employees/$userid': typeof EmployeesUseridRoute
  '/employees/add': typeof EmployeesAddRoute
  '/cafes': typeof CafesIndexRoute
  '/employees': typeof EmployeesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/cafes/$cafeid': typeof CafesCafeidRoute
  '/cafes/add': typeof CafesAddRoute
  '/employees/$userid': typeof EmployeesUseridRoute
  '/employees/add': typeof EmployeesAddRoute
  '/cafes/': typeof CafesIndexRoute
  '/employees/': typeof EmployeesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/cafes/$cafeid'
    | '/cafes/add'
    | '/employees/$userid'
    | '/employees/add'
    | '/cafes'
    | '/employees'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/cafes/$cafeid'
    | '/cafes/add'
    | '/employees/$userid'
    | '/employees/add'
    | '/cafes'
    | '/employees'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/cafes/$cafeid'
    | '/cafes/add'
    | '/employees/$userid'
    | '/employees/add'
    | '/cafes/'
    | '/employees/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CafesCafeidRoute: typeof CafesCafeidRoute
  CafesAddRoute: typeof CafesAddRoute
  EmployeesUseridRoute: typeof EmployeesUseridRoute
  EmployeesAddRoute: typeof EmployeesAddRoute
  CafesIndexRoute: typeof CafesIndexRoute
  EmployeesIndexRoute: typeof EmployeesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CafesCafeidRoute: CafesCafeidRoute,
  CafesAddRoute: CafesAddRoute,
  EmployeesUseridRoute: EmployeesUseridRoute,
  EmployeesAddRoute: EmployeesAddRoute,
  CafesIndexRoute: CafesIndexRoute,
  EmployeesIndexRoute: EmployeesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/cafes/$cafeid",
        "/cafes/add",
        "/employees/$userid",
        "/employees/add",
        "/cafes/",
        "/employees/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/cafes/$cafeid": {
      "filePath": "cafes/$cafeid.tsx"
    },
    "/cafes/add": {
      "filePath": "cafes/add.tsx"
    },
    "/employees/$userid": {
      "filePath": "employees/$userid.tsx"
    },
    "/employees/add": {
      "filePath": "employees/add.tsx"
    },
    "/cafes/": {
      "filePath": "cafes/index.tsx"
    },
    "/employees/": {
      "filePath": "employees/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
